#!/bin/bash
# --------------------------------------------------------------------------------------------------
# A collection of various SSH-focused scripts
# --------------------------------------------------------------------------------------------------

set -eo pipefail

SSH_CONFIG="$HOME/.ssh/config"

addHostConfig() {
    if [ ! -f "$SSH_CONFIG" ]; then
        echo "An SSH config file was not found"
        touch "$SSH_CONFIG"
        chmod 600 "$SSH_CONFIG"
        echo "Created a new SSH config file ($SSH_CONFIG)"
    fi

    local alias
    read -rp "Enter a unique alias for the host: " alias

    local username
    read -rp "Enter the user name: " username

    local address
    read -rp "Enter the IP address or host name: " address

    local port
    read -rp "Enter the SSH port, or skip to use the default (22): " port
    port=${port:-22}

    echo "The following information will be added to your SSH configuration file:"
    echo "Host $alias"
    echo -e "\tUser $username"
    echo -e "\tHostName $address"
    echo -e "\tPort $port"

    local confirmation
    read -rp "Is this information correct? (y/n): " confirmation

    if [ "$confirmation" == "y" ]; then
        {
            echo -en '\n'
            echo "Host $alias"
            echo -e "\tUser $username"
            echo -e "\tHostName $address"
            echo -e "\tPort $port"
        } >> "$SSH_CONFIG"
        echo "Your SSH config has been updated"
        sleep 1
    else
        echo "SSH config update cancelled"
        sleep 1
    fi
}

generateKey() {
    echo "Which key type would you like to generate?"
    local type
    select type in "ed25519" "ed25519-sk" "rsa" "dsa" "ecdsa" "ecdsa-sk"; do
        break
    done

    echo "Would you like to add a comment to this key?"
    local action
    local comment
    select action in "Yes" "No" "Use git email"; do
        case $action in
            "Yes" ) read -rep "Enter your comment: " comment; break;;
            "No" ) comment=""; break;;
            "Use git email" ) comment=$(git config user.email); break;;
        esac
    done

    file="$HOME/.ssh/id_$type"

    echo "Generating SSH key"
    echo "    File: $file"
    echo "    Type: $type"
    echo "    Comment: $comment"
    ssh-keygen -t $type -C "$comment" -f "$file"

    echo "Adding the key to ssh-agent"
    eval "$(ssh-agent -s)"
    ssh-add "$file"

    echo "Add GitHub to ssh configuration?"
    local action
    select action in "Yes" "No"; do
        case $action in
            "Yes" )
                {
                    echo -en '\n'
                    echo "Host github.com"
                    echo -e "\tUser git"
                    echo -e "\tHostName github.com"
                    echo -e "\tIdentityFile $file"
                } >> "$HOME/.ssh/config"; break;;
            "No" ) break;;
        esac
    done

    echo
    echo "Your SSH key has been generated"
    echo "Private Key: $file"
    echo "Public key: $file.pub"
    echo "For GitHub: Add your public key to your account: https://github.com/settings/keys"
    echo "To update repo URLs, use: git remote set-url origin git@github.com:USERNAME/REPOSITORY.git"
}

UTIL=""
select UTIL in "Generate Key" "Add Host"; do
    case $UTIL in
        "Generate Key" ) generateKey; break;;
        "Add Host" ) addHostConfig; break;;
    esac
done
