#!/usr/bin/env bash
set -euo pipefail

BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$BASEDIR/internal/scripts/helpers.sh"

main() {
    if ! on_macos && ! on_linux; then
        echo "Unsupported operating system"
        return 1
    fi

    log "Installing packages"
    install_packages

    log "Setting up the shell"
    "$BASEDIR/internal/scripts/configure_shell.sh"

    log "Setting up Git"
    "$BASEDIR/git/setup.sh"

    cd "$BASEDIR"
    log "Downloading all git submodules"
    git submodule update --init --recursive

    run_dotbot
}

# Use dotbot to clean dead links and symlink the dotfiles.
run_dotbot() {
    local dotbot_dir="internal/dotbot"
    local dotbot_bin="$BASEDIR/$dotbot_dir/bin/dotbot"
    local dotbot_config="dotbot.yaml"

    git -C "$dotbot_dir" submodule sync --quiet --recursive
    "$dotbot_bin" --base-directory "$BASEDIR" --config-file "$dotbot_config"
}

# Install packages and apps. These may be packages that are requirements for other programs (e.g.
# some neovim plugins require ripgrep), or they may be things that I commonly use.
install_packages() {
    if on_macos; then
        "$BASEDIR/internal/scripts/install-packages-macos.sh"
    elif on_linux; then
        "$BASEDIR/internal/scripts/install-packages-linux.sh"
    fi

    go install golang.org/x/tools/cmd/goimports@latest
}

main "$@"
