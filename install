#!/usr/bin/env bash
set -euo pipefail

BASE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
SCRIPTS_DIR="$BASE_DIR/.internal/scripts"

set +u; source "$BASE_DIR/fish/profile"; set -u
source "$SCRIPTS_DIR/helpers.sh"

# On macOS and Linux I've had issues where apps that are launched from some form of dock or launcher
# (e.g. spotlight) use the system's default login shell (zsh, bash) instead of fish even if fish is
# configured as the login shell. When the environment is set up in config.fish, this can cause the
# app to have the wrong environment. To fix this, I store my environment variables in a separate
# profile file and load them from there. This function configures other shells like bash and zsh to
# also load the profile just in case the problem above happens.
setup_profiles() {
    local cmd="source '$BASE_DIR/fish/profile'"
    local shell_configs=("$HOME/.bash_profile" "$HOME/.zprofile" "$HOME/.profile")
    for config in "${shell_configs[@]}"; do
        if [[ -f "$config" ]] && grep -q "$cmd" "$config"; then
            log "Source command has already been added to '$config'"
            continue
        fi

        log "Adding source command to '$config'"
        echo "# Added by dotfiles installer" >> "$config"
        echo "$cmd" >> "$config"
    done
}

main() {
    if ! on_macos && ! on_linux; then
        echo "Unsupported operating system"
        return 1
    fi

    log "Installing packages"
    "$SCRIPTS_DIR/install-packages.sh"

    log "Setting up the shell"
    "$SCRIPTS_DIR/configure-shell.sh"

    log "Setting up Git"
    "$SCRIPTS_DIR/configure-git.sh"

    cd "$BASE_DIR"
    log "Downloading all git submodules"
    git submodule update --init --recursive

    log "Setting up symbolic links"
    "$SCRIPTS_DIR/manage-symlinks.sh"

    # This might be the first time we installed a theme for bat, in which case we need to rebuild
    # it's cache for the theme to become usable. This doesn't take long, so I'm doing it on every
    # run for now.
    log "Rebuilding bat's cache"
    bat cache --build

    log "Configuring other shells to load the custom profile"
    setup_profiles
}

main "$@"
